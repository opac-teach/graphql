type Song {
  "The ID of the song"
  id: ID!
  "The name of the song"
  name: String!
  "The user of the song"
  user: User!
  "The genre of the song"
  genre: Genre!
}

type Query {
  "Get all songs"
  songs(genreId: ID, pagination: PaginationInput): [Song!]!
  "GET a song by ID"
  song(id: ID!): Song!
}

type Mutation {
  "Create a new song"
  createSong(input: CreateSongInput!): CreateSongResponse
  "Update a song"
  updateSong(id: ID!, input: CreateUserInput): CreateSongResponse!
  "Delete a song"
  deleteSong(id: ID!): DeleteSongResponse!
}

"""
The input for creating a new user
"""
input CreateSongInput {
  "The name of the song"
  name: String!
  genreId: String!
}

"""
The input for paginate song
"""
input PaginationInput {
  page: Int = 1
  pageSize: Int = 5
}

type CreateSongResponse {
  "Whether the user was created successfully"
  success: Boolean!
  "The created user"
  song: Song!
}

type DeleteSongResponse {
  "Whether the user was deleted successfully"
  success: Boolean!
}
